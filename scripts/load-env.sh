#!/bin/bash

# Load Environment Variables Script
# This script loads environment variables from .env file for Ansible deployment

ENV_FILE="${1:-infrastructure/ansible/.env}"

# Function to load environment variables from file
load_env() {
    local env_file="$1"
    
    if [[ -f "$env_file" ]]; then
        echo "Loading environment variables from: $env_file"
        
        # Export variables from .env file (ignore comments and empty lines)
        set -a
        source <(grep -v '^#' "$env_file" | grep -v '^$')
        set +a
        
        echo "✅ Environment variables loaded successfully!"
        return 0
    else
        echo "❌ Environment file not found: $env_file"
        echo "💡 Create it from template: cp infrastructure/ansible/.env.template infrastructure/ansible/.env"
        return 1
    fi
}

# Function to validate required environment variables
validate_env() {
    local required_vars=(
        "VPS_HOST"
        "DOMAIN_NAME"
        "GIT_REPO_URL"
    )
    
    local missing_vars=()
    
    for var in "${required_vars[@]}"; do
        if [[ -z "${!var}" ]]; then
            missing_vars+=("$var")
        fi
    done
    
    if [[ ${#missing_vars[@]} -gt 0 ]]; then
        echo "❌ Missing required environment variables:"
        printf '   - %s\n' "${missing_vars[@]}"
        echo ""
        echo "Please set these variables in your .env file or export them manually."
        return 1
    fi
    
    echo "✅ All required environment variables are set!"
    return 0
}

# Function to display current environment variables
show_env() {
    echo ""
    echo "Current deployment configuration:"
    echo "================================"
    echo "VPS_HOST: ${VPS_HOST:-<not set>}"
    echo "VPS_USER: ${VPS_USER:-root}"
    echo "DOMAIN_NAME: ${DOMAIN_NAME:-<not set>}"
    echo "SSL_EMAIL: ${SSL_EMAIL:-<auto-generated>}"
    echo "GIT_REPO_URL: ${GIT_REPO_URL:-<not set>}"
    echo "GIT_BRANCH: ${GIT_BRANCH:-main}"
    echo "ENVIRONMENT: ${ENVIRONMENT:-production}"
    echo "APP_NAME: ${APP_NAME:-nestjs-blog-api}"
    echo "================================"
    echo ""
}

# Main execution
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Script is being executed directly
    if load_env "$ENV_FILE" && validate_env; then
        show_env
        echo "🚀 Ready for deployment!"
        echo ""
        echo "Run deployment commands:"
        echo "  ./scripts/deploy.sh"
        echo "  ./scripts/update.sh"
    else
        exit 1
    fi
else
    # Script is being sourced
    load_env "$ENV_FILE"
fi
