{
  "name": "project",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:pm2": "pm2 start ecosystem.config.json",
    "start:pm2:dev": "pm2-dev start ecosystem.config.json",
    "stop:pm2": "pm2 stop ecosystem.config.json",
    "restart:pm2": "pm2 restart ecosystem.config.json",
    "reload:pm2": "pm2 reload ecosystem.config.json",
    "delete:pm2": "pm2 delete ecosystem.config.json",
    "logs:pm2": "pm2 logs",
    "monit:pm2": "pm2 monit",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "dotenv -e .env.test -- jest --config ./test/jest-e2e.json",
    "test:e2e:watch": "dotenv -e .env.test -- jest --config ./test/jest-e2e.json --watch",
    "test:setup": "./setup-test-db.sh",
    "test:db:up": "docker compose up postgres-test -d",
    "test:db:down": "docker compose stop postgres-test",
    "redis:up": "docker compose up redis -d",
    "redis:down": "docker compose stop redis",
    "redis:cli": "docker compose exec redis redis-cli",
    "cache:clear": "docker compose exec redis redis-cli FLUSHALL",
    "cache:validate": "./validate-cache.sh",
    "cache:monitor": "docker compose exec redis redis-cli monitor",
    "db:generate": "npx prisma generate",
    "db:migrate": "npx prisma migrate dev",
    "db:reset": "npx prisma migrate reset",
    "db:seed": "npx prisma db seed",
    "db:studio": "npx prisma studio",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:build": "docker compose build",
    "deploy:setup": "./scripts/setup.sh",
    "deploy:prod": "./scripts/deploy.sh production",
    "deploy:update": "./scripts/update.sh production",
    "deploy:dev": "./scripts/dev-prod.sh up",
    "deploy:dev:down": "./scripts/dev-prod.sh down",
    "deploy:dev:logs": "./scripts/dev-prod.sh logs",
    "ci:setup": "./scripts/setup-github-actions.sh"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^6.15.0",
    "cache-manager": "^7.2.0",
    "cache-manager-ioredis-yet": "^2.1.2",
    "cache-manager-redis-yet": "^5.1.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "pm2": "^5.4.2",
    "prisma": "^6.15.0",
    "redis": "^5.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/dotenv": "^8.2.3",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "@types/winston": "^2.4.4",
    "dotenv": "^17.2.2",
    "dotenv-cli": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^15.14.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.test\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
