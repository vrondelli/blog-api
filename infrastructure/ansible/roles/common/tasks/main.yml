---
- name: Set timezone
  timezone:
    name: UTC

- name: Create application user
  user:
    name: '{{ app_user }}'
    shell: /bin/bash
    home: '/home/{{ app_user }}'
    createhome: yes
    system: no

- name: Add app user to sudo group
  user:
    name: '{{ app_user }}'
    groups: sudo
    append: yes

- name: Create SSH directory for app user
  file:
    path: '/home/{{ app_user }}/.ssh'
    state: directory
    owner: '{{ app_user }}'
    group: '{{ app_user }}'
    mode: '0700'

- name: Copy SSH private key to app user
  copy:
    src: '{{ ansible_ssh_private_key_file }}'
    dest: '/home/{{ app_user }}/.ssh/github_deploy_key'
    owner: '{{ app_user }}'
    group: '{{ app_user }}'
    mode: '0600'
  when: ansible_ssh_private_key_file is defined

- name: Copy SSH public key to app user
  copy:
    src: '{{ ansible_ssh_private_key_file }}.pub'
    dest: '/home/{{ app_user }}/.ssh/github_deploy_key.pub'
    owner: '{{ app_user }}'
    group: '{{ app_user }}'
    mode: '0644'
  when: ansible_ssh_private_key_file is defined

- name: Configure Git for app user
  become_user: '{{ app_user }}'
  git_config:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    scope: global
  loop:
    - {
        name: 'core.sshCommand',
        value: 'ssh -i /home/{{ app_user }}/.ssh/github_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no',
      }
    - { name: 'user.name', value: 'Deploy User' }
    - { name: 'user.email', value: 'deploy@{{ domain_name }}' }

- name: Add GitHub to known hosts for app user
  become_user: '{{ app_user }}'
  known_hosts:
    name: github.com
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    state: present

- name: Create application directory
  file:
    path: '{{ app_dir }}'
    state: directory
    owner: '{{ app_user }}'
    group: '{{ app_user }}'
    mode: '0755'

- name: Create backup directory
  file:
    path: /opt/backups
    state: directory
    owner: '{{ app_user }}'
    group: '{{ app_user }}'
    mode: '0755'

- name: Install Node.js repository
  shell: curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
  args:
    creates: /etc/apt/sources.list.d/nodesource.list

- name: Install Node.js
  package:
    name: nodejs
    state: present

- name: Install pnpm globally
  npm:
    name: pnpm
    global: yes
    state: present

- name: Configure system limits
  lineinfile:
    path: /etc/security/limits.conf
    line: '{{ item }}'
    state: present
  loop:
    - '* soft nofile 65536'
    - '* hard nofile 65536'
    - '* soft nproc 65536'
    - '* hard nproc 65536'
